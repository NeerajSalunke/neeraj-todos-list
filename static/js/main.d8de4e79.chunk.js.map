{"version":3,"sources":["MyComponents/Header.js","MyComponents/AddTodo.js","MyComponents/Todo.js","MyComponents/Todos.js","MyComponents/Footer.js","MyComponents/About.js","MyComponents/Search.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","to","title","type","id","searchBar","placeholder","onChange","e","setSearchTerm","target","value","AddTodo","useState","setTitle","desc","setDesc","style","textAlign","width","onSubmit","preventDefault","length","alert","add","htmlFor","Todo","innerWidth","todo","onClick","onDelete","Todos","display","gridTemplateColumns","minHeight","todos","fontWeight","map","sno","Footer","href","About","Search","includes","searchTerm","App","initTodo","localStorage","getItem","JSON","parse","console","log","setTodos","filter","setItem","stringify","addToTodos","myTodo","useEffect","basename","process","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d8de4e79.chunk.js","sourcesContent":["import React , {useState} from 'react';\r\nimport {Link} from \"react-router-dom\"; /* change all \"href\" to  \"to\". Similarly, change \"a\" to Link*/\r\n                                        /* While using react router , we need to do above changes */\r\nfunction Header(props) { /* We want data from App.js, so use props. */\r\n\r\n    // const[searchTerm,setSearchTerm]=useState(\"\");\r\n\r\n    const handleChange = (e) => {\r\n        props.setSearchTerm(e.target.value);\r\n    }\r\n\r\n    // console.log(searchTerm)\r\n\r\n    \r\n\r\n    return (\r\n        \r\n        /*  following code is from bootstrap app  */\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <div className=\"container-fluid\">\r\n                <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> {/* To get title from App.js, we used props.title */}\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n                        </li>\r\n\r\n                    </ul>\r\n                    { props.searchBar? <form className=\"d-flex\">\r\n                        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search Title\" /* value={searchTerm} */ onChange={handleChange} aria-label=\"Search\" />\r\n                        {/* <button className=\"btn btn-outline-success\" type=\"submit\">Search</button> */}\r\n                        <Link className=\"nav-link\" to=\"/search\">Search</Link>\r\n                    </form> : \"\"} {/* if searchBar is set to true, then show form(i.e. anything written before :),or if its false then the content to show is written after : */}\r\n                </div>\r\n            </div>\r\n        </nav>\r\n\r\n        \r\n    )\r\n}\r\n\r\nexport default Header;","import React, { useState } from 'react';\r\n\r\n\r\nfunction AddTodo(props) {\r\n\r\n    const[title,setTitle]=useState(\"\");\r\n    const[desc,setDesc]=useState(\"\");\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault(); /* page wont reload */\r\n        if(title.length===0 || desc.length===0)\r\n        {\r\n            alert(\"Please give Title and Description\");\r\n        }\r\n        else \r\n        {\r\n            props.add(title,desc);\r\n            setTitle(\"\");\r\n            setDesc(\"\");\r\n        }\r\n           \r\n    }\r\n\r\n    let AddTodoStyle = {\r\n        textAlign:\"center\",\r\n        width:\"40%\"\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\" style={AddTodoStyle}>\r\n            <h4>Add Todo</h4>\r\n            <form onSubmit={submit}>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"title\" className=\"form-label\">Todo Title</label>\r\n                    <input type=\"text\" value={title} onChange={(e)=>setTitle(e.target.value)} className=\"form-control\" id=\"title\" aria-describedby=\"emailHelp\"/>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"desc\" className=\"form-label\">Todo Description</label>\r\n                    <input type=\"text\" value={desc} onChange={(e)=>setDesc(e.target.value)} className=\"form-control\" id=\"desc\"/>\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-success btn-sm\">Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddTodo;","import React from 'react';\r\n\r\nfunction Todo(props) {\r\n    let todoStyle={\r\n        textAlign:\"center\",\r\n        innerWidth:\"50px\",\r\n    }\r\n\r\n    \r\n    return(\r\n        <>\r\n        <div style={todoStyle}>\r\n            <h4>{props.todo.title}</h4>\r\n            <p>{props.todo.desc}</p>\r\n            <button className=\"btn btn-sm btn-danger\" onClick={()=>{props.onDelete(props.todo)}}>Delete</button>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Todo;","import React from 'react';\r\nimport Todo from \"./Todo\";\r\n\r\nfunction Todos(props) {\r\n    let myStyle = {\r\n        display: \"grid\",\r\n        gridTemplateColumns: \"1fr 1fr 1fr\",\r\n        minHeight: \"70vh\",\r\n        // width:\"500px\"\r\n    }\r\n    let yourStyle = {\r\n        fontWeight:\"bold\",\r\n        minHeight:\"70vh\",\r\n        textAlign:\"center\",\r\n    }\r\n    return (\r\n        <>\r\n            <h3 className=\"text-center my-3\">Todos List</h3>\r\n            <div className=\"container my-3\" style={myStyle}>\r\n                {/* <Todo todo={props.todos[0]}/> */}\r\n\r\n                {\r\n                    props.todos.length === 0 ? \r\n                    <div style={yourStyle}>No todos pending!!!</div> \r\n                        :\r\n                    props.todos.map(todo => { /* to use loops in JSX,we use map. Know more:- https://www.telerik.com/blogs/beginners-guide-loops-in-react-jsx */\r\n                        /* todo in above line refers to first task of todos object made in App.js */\r\n                        return <Todo todo={todo} key={todo.sno} onDelete={props.onDelete} />\r\n                    })\r\n                }\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Todos;","import React from 'react';\r\nimport '../App.css';\r\n\r\nfunction Footer() {\r\n    return(\r\n        <footer className=\"bg-dark text-light py-3\">\r\n            <p className=\"text-center\">\r\n                Copyright &copy; <br/>\r\n                <a href=\"https://github.com/NeerajSalunke/neeraj-todos-list\">View Source Code</a>\r\n            </p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport '../App.css';\r\n\r\nfunction About() {\r\n    return(\r\n        <div>\r\n            <p>Todos you add are saved in the localStorage of your device. It won't get deleted unless you clear site data</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport Todo from \"./Todo\";\r\n\r\nfunction Search(props) {\r\n    let myStyle = {\r\n        display: \"grid\",\r\n        gridTemplateColumns: \"1fr 1fr 1fr\",\r\n        minHeight: \"70vh\",\r\n        // width:\"500px\"\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"container my-3\" style={myStyle}>\r\n                {\r\n                    props.todos.map(todo => { \r\n                        if(todo.title.includes(props.searchTerm))\r\n                        {\r\n                            return <Todo todo={todo} key={todo.sno} onDelete={props.onDelete} />\r\n                        }\r\n                    })\r\n                }\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Search;","import './App.css';\nimport Header from \"./MyComponents/Header\"\nimport AddTodo from './MyComponents/AddTodo';\nimport Todos from \"./MyComponents/Todos\"\n// import Todo from \"./MyComponents/Todo\"\nimport Footer from \"./MyComponents/Footer\"\nimport About from './MyComponents/About';\nimport Search from './MyComponents/Search';\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\n\nfunction App() {\n\n  let initTodo;\n  if (localStorage.getItem(\"todos\") == null) {\n    initTodo = []; //if there is no local storage, we initialize a new array.\n  }\n  else {\n    initTodo = JSON.parse(localStorage.getItem(\"todos\"));\n  }\n\n  const onDelete = (todo) => {\n    console.log(\"I called todo:\", todo);\n\n    setTodos(todos.filter((e) => {\n      return e !== todo; /* return e which are not equal to todo */\n    }));\n    /*learn more about filter:- https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter */\n    /*learn more about filter:- https://www.w3schools.com/jsref/jsref_filter.asp */\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }\n\n  const addToTodos = (title, desc) => {\n    console.log(\"title:\" + title + \"\\ndesc:\" + desc);\n    let sno;\n    if (todos.length === 0) sno = 0;\n    else sno = todos[todos.length - 1].sno + 1;\n\n    const myTodo = {\n      sno: sno,\n      title: title,\n      desc: desc\n    }\n    console.log(myTodo);\n    setTodos([...todos, myTodo]);\n  }\n\n  const [todos, setTodos] = useState(initTodo); /* setTodos is a function which will set the value of todos */\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos)); /* localStorage is a key-value pair. values are always string */\n  }, [todos])\n\n  const[searchTerm,setSearchTerm]=useState(\"\");\n\n  return (\n    <> {/* write anything in App.js inside a tag. Here we used <></> */}\n      <Router basename={process.env.PUBLIC_URL}> {/* Header and Footer have to be displayed every time. AddTodo and Todos are to be displayed when endpoint is / */}\n        <Header title=\"Neeraj's Todos List\" setSearchTerm={setSearchTerm} searchBar={true} /> {/* here we are passing title to Header.js */} {/* Also,we set searchBar as a boolean variable */}\n        <Switch> {/* this switch code is copied from website:- https://reactrouter.com/web/guides/quick-start*/}\n          {/* later i did some changes in this switch */}\n          <Route exact path=\"/\" render={() => { /* i want to render AddTodo and Todos when endpoint is / */\n            return (\n              <>\n                <AddTodo add={addToTodos} />\n                <Todos todos={todos} onDelete={onDelete}/> {/* here we are passing todos object to Todos.js . todos object is written inside {} .  */}\n              </>)\n          }}>\n\n          </Route>\n          <Route exact path=\"/about\" render={() => {\n            return (\n              <>\n                <About />\n              </>\n            )\n          }}>\n\n          </Route>\n          <Route exact path=\"/search\" render={() => {\n            return(\n              <>\n                <Search todos={todos}  searchTerm={searchTerm}/>\n              </>\n            )\n          }}>\n          </Route>\n        </Switch>\n\n        <Footer />\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}